"use strict";(self.webpackChunkapp=self.webpackChunkapp||[]).push([[76],{7213:(E,p,i)=>{i.d(p,{k:()=>m});var l=i(467),_=i(3953),y=i(9642),u=i(9967),f=i(4412);let m=(()=>{var n;class d{get batches(){return this._batches.asObservable()}constructor(){this._batches=new f.t([]),this.apiService=(0,_.WQX)(y.G)}getBatches(s,c){var e=this;return(0,l.A)(function*(){try{const t=e.apiService.collectionFirestoreRef("batches");let a=(0,u.P)(t,e.apiService.limitQuery(s));e.lastVisible&&c&&(a=(0,u.P)(a,e.apiService.startAfterQuery(e.lastVisible)));const r=yield e.apiService.getDocsByQuery(a);e.lastVisible=r.docs[r.docs.length-1],console.log("last",e.lastVisible);const h=yield r.docs.map(v=>{let b=v.data();return b.id=v.id,b});let o=e._batches.value;return o=o.concat(h),e._batches.next(o),h}catch(t){throw t}})()}addBatch(s){var c=this;return(0,l.A)(function*(){try{const e=yield c.apiService.addDocument("batches",s);let t=c._batches.value||[];return t=t.concat([{...s,id:null==e?void 0:e.id}]),c._batches.next(t),e}catch(e){throw e}})()}updateBatch(s,c){var e=this;return(0,l.A)(function*(){try{const t=yield e.apiService.updateDocument(`batches/${s}`,c);console.log(t);let a=e._batches.value||[];const r=a.findIndex(h=>h.id==s);return-1==r?null:(a[r]={...a[r],...c},e._batches.next(a),{...a[r]})}catch(t){throw t}})()}getAllBatches(){var s=this;return(0,l.A)(function*(){try{return yield(yield s.apiService.getDocs("batches")).docs.map(t=>{let a=t.data();return a.id=t.id,a})}catch(c){throw c}})()}reset(){this._batches.next([]),this.lastVisible=null}}return(n=d).\u0275fac=function(s){return new(s||n)},n.\u0275prov=_.jDH({token:n,factory:n.\u0275fac,providedIn:"root"}),d})()}}]);